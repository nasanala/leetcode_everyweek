/*


Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:

The solution set must not contain duplicate triplets.

Example:

Given array nums = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]

*/



class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> ans;
        if(nums.size() < 3)
        {
            return ans;
        }
        
        sort(nums.begin(), nums.end());
        
        int total_size = nums.size();
        for(int i=0; i<total_size-2; i++)
        {
            if(i != 0)
            {
                if(nums[i] == nums[i-1])
                {
                    continue;
                }    
            }
            
            int left = i+1;
            int right = total_size-1;
            
            while(left < right)
            {
                int sum = nums[i] + nums[left] + nums[right];
                if(sum < 0)
                {
                    left++;
                }
                else if(sum > 0)
                {
                    right--;
                }
                else
                {
                    ans.push_back({nums[i], nums[left], nums[right]});
                    int left_num = nums[left];
                    int right_num = nums[right];
                    
                    while(left<right && left_num == nums[left])
                    {
                        left++;
                    }
                    
                    while(left<right && right_num == nums[right])
                    {
                        right--;
                    }
                    
                }
            }
  
        }

        
        
        return ans;
    }
};
